version: '3.8'

services:
  # ==================== BACKEND DEVELOPMENT ====================
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: vpbank-kmult-backend-dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend/app:/app/app:ro
      - ./backend/tests:/app/tests:ro
    environment:
      - ENVIRONMENT=development
      - AWS_REGION=us-east-1
      - PYTHONPATH=/app
      - RELOAD=true
    env_file:
      - .env.dev
    networks:
      - vpbank-dev
    depends_on:
      - redis-dev
      - localstack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/mutil_agent/public/api/v1/health-check/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ==================== FRONTEND DEVELOPMENT ====================
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: vpbank-kmult-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/public:/app/public:ro
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_ENVIRONMENT=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - vpbank-dev
    depends_on:
      - backend-dev

  # ==================== REDIS FOR DEVELOPMENT ====================
  redis-dev:
    image: redis:7-alpine
    container_name: vpbank-kmult-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    networks:
      - vpbank-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ==================== LOCALSTACK FOR AWS SERVICES ====================
  localstack:
    image: localstack/localstack:latest
    container_name: vpbank-kmult-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,dynamodb,secretsmanager,ecr
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - localstack-data:/tmp/localstack
    networks:
      - vpbank-dev

  # ==================== MONITORING ====================
  prometheus:
    image: prom/prometheus:latest
    container_name: vpbank-kmult-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - vpbank-dev

  grafana:
    image: grafana/grafana:latest
    container_name: vpbank-kmult-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - vpbank-dev
    depends_on:
      - prometheus

  # ==================== TESTING SERVICES ====================
  test-runner:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: vpbank-kmult-test-runner
    volumes:
      - ./backend:/app:ro
      - test-results:/app/test-results
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=test
    networks:
      - vpbank-dev
    profiles:
      - testing

volumes:
  redis-dev-data:
  localstack-data:
  prometheus-data:
  grafana-data:
  test-results:

networks:
  vpbank-dev:
    driver: bridge
