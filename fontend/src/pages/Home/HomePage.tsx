import React from 'react';
import {
  Container,
  Header,
  Grid,
  Box,
  Cards,
  Button,
  Badge,
  ProgressBar,
  SpaceBetween,
  TextContent,
  ColumnLayout,
  StatusIndicator
} from "@cloudscape-design/components";
import { useNavigate } from 'react-router-dom';
import { Agent } from '../../types';

interface HomePageProps {
  agents: Agent[];
  loading: boolean;
}

const HomePage: React.FC<HomePageProps> = ({ agents, loading }) => {
  const navigate = useNavigate();

  const features = [
    {
      title: 'üìÑ T√≥m t·∫Øt vƒÉn b·∫£n & T√†i li·ªáu',
      description: 'S·ª≠ d·ª•ng AI ƒë·ªÉ t√≥m t·∫Øt vƒÉn b·∫£n v√† t√†i li·ªáu v·ªõi nhi·ªÅu ƒë·ªãnh d·∫°ng kh√°c nhau (PDF, DOCX, TXT).',
      action: () => navigate('/text-summary'),
      buttonText: 'B·∫Øt ƒë·∫ßu t√≥m t·∫Øt'
    },
    {
      title: 'üí¨ Chat v·ªõi AI Agent',
      description: 'Tr√≤ chuy·ªán v·ªõi c√°c AI Agent chuy√™n v·ªÅ ph√¢n t√≠ch r·ªßi ro v√† x·ª≠ l√Ω t√†i li·ªáu.',
      action: () => navigate('/chat'),
      buttonText: 'B·∫Øt ƒë·∫ßu chat'
    },
    {
      title: 'üìä Dashboard ph√¢n t√≠ch',
      description: 'Theo d√µi hi·ªáu su·∫•t, th·ªëng k√™ s·ª≠ d·ª•ng v√† c√°c ch·ªâ s·ªë s·ª©c kh·ªèe h·ªá th·ªëng.',
      action: () => navigate('/dashboard'),
      buttonText: 'Xem Dashboard'
    },
    {
      title: 'ü§ñ Qu·∫£n l√Ω Agent',
      description: 'T·∫°o, c·∫•u h√¨nh v√† qu·∫£n l√Ω c√°c AI Agent v·ªõi kh·∫£ nƒÉng t√πy ch·ªânh.',
      action: () => navigate('/agents'),
      buttonText: 'Qu·∫£n l√Ω Agent'
    }
  ];

  const systemStats = [
    {
      title: 'AI Agents ho·∫°t ƒë·ªông',
      value: agents.length.toString(),
      status: agents.length > 0 ? 'success' : 'warning' as const
    },
    {
      title: 'Tr·∫°ng th√°i h·ªá th·ªëng',
      value: 'Ho·∫°t ƒë·ªông t·ªët',
      status: 'success' as const
    },
    {
      title: 'Th·ªùi gian ph·∫£n h·ªìi',
      value: '< 3s',
      status: 'success' as const
    },
    {
      title: 'Uptime',
      value: '99.9%',
      status: 'success' as const
    }
  ];

  return (
    <Container>
      <SpaceBetween direction="vertical" size="l">
        <Header
          variant="h1"
          description="H·ªá th·ªëng ƒë√°nh gi√° r·ªßi ro AI v·ªõi kh·∫£ nƒÉng t√≥m t·∫Øt t√†i li·ªáu, tr√≤ chuy·ªán AI v√† ki·∫øn tr√∫c ƒëa agent s·ª≠ d·ª•ng AWS Bedrock (Claude 3.7)."
        >
          ü§ñ H·ªá th·ªëng ƒë√°nh gi√° r·ªßi ro AI ƒëa Agent
        </Header>

        {/* System Status Cards */}
        <Box>
          <Header variant="h2">T·ªïng quan h·ªá th·ªëng</Header>
          <ColumnLayout columns={4} variant="text-grid">
            {systemStats.map((stat, index) => (
              <div key={index}>
                <Box variant="awsui-key-label">{stat.title}</Box>
                <SpaceBetween direction="horizontal" size="xs">
                  <div style={{ fontSize: '24px', fontWeight: 'bold' }}>
                    {stat.value}
                  </div>
                  <StatusIndicator type={stat.status as any} />
                </SpaceBetween>
              </div>
            ))}
          </ColumnLayout>
        </Box>

        {/* Quick Actions */}
        <Box>
          <Header variant="h2">T√≠nh nƒÉng ch√≠nh</Header>
          <ColumnLayout columns={2}>
            {features.map((feature, index) => (
              <div key={index} style={{ border: '1px solid #e9ebed', borderRadius: '8px' }}>
                <Box padding="l">
                  <SpaceBetween direction="vertical" size="m">
                    <Header variant="h3">{feature.title}</Header>
                    <TextContent>
                      <p>{feature.description}</p>
                    </TextContent>
                    <Button variant="primary" onClick={feature.action}>
                      {feature.buttonText}
                    </Button>
                  </SpaceBetween>
                </Box>
              </div>
            ))}
          </ColumnLayout>
        </Box>

        {/* Features Overview */}
        <Box>
          <Header variant="h2">Key Features</Header>
          <ColumnLayout columns={1}>
            <div style={{ border: '1px solid #e9ebed', borderRadius: '8px' }}>
              <Box padding="l">
                <SpaceBetween direction="vertical" size="m">
                  <Header variant="h3">ü§ñ Multi-Agent System</Header>
                  <TextContent>
                    <p>Orchestrate multiple AI agents for collaborative risk assessment and document analysis.</p>
                  </TextContent>
                </SpaceBetween>
              </Box>
            </div>

            <div style={{ border: '1px solid #e9ebed', borderRadius: '8px' }}>
              <Box padding="l">
                <SpaceBetween direction="vertical" size="m">
                  <Header variant="h3">üìÑ Document Processing</Header>
                  <TextContent>
                    <p>Summarize, extract, and analyze documents in Vietnamese and English.</p>
                  </TextContent>
                </SpaceBetween>
              </Box>
            </div>

            <div style={{ border: '1px solid #e9ebed', borderRadius: '8px' }}>
              <Box padding="l">
                <SpaceBetween direction="vertical" size="m">
                  <Header variant="h3">üí¨ Conversational AI</Header>
                  <TextContent>
                    <p>Chat with AI agents for real-time insights and support.</p>
                  </TextContent>
                </SpaceBetween>
              </Box>
            </div>
          </ColumnLayout>
        </Box>

        {/* Loading State */}
        {loading && (
          <Box>
            <Header variant="h3">Loading System Data...</Header>
            <ProgressBar 
              status="in-progress"
              value={50}
              additionalInfo="Connecting to backend services..."
            />
          </Box>
        )}
      </SpaceBetween>
    </Container>
  );
};

export default HomePage;
